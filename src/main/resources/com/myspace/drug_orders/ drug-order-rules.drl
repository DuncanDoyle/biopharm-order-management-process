package com.myspace.drug_orders;


import org.jbpm.casemgmt.api.CaseService;
import org.jbpm.services.api.service.ServiceRegistry;
import org.kie.api.runtime.process.CaseData;
import org.jbpm.casemgmt.api.model.instance.CaseFileInstance;

import com.myspace.drug_orders.model.Drug;
import com.myspace.drug_orders.model.DrugStock;
import com.myspace.drug_orders.model.Order;


rule "Update case data"
ruleflow-group "update-case-data"
when
    $caseData: CaseFileInstance()
then
    System.out.println("Updating Case Data!");
    update($caseData);
end

rule "Found casedata"
when
    $caseData: CaseFileInstance()
then
    System.out.println("Found CaseData!!!");
end

rule "Found order"
when
    $caseData: CaseFileInstance()
    $order: Order() from $caseData.getData("order")
then
    System.out.println("Found Order!!!");
end

rule "Found Stock Info"
when
    $caseData: CaseFileInstance()
    $stockInfo: DrugStock() from $caseData.getData("stockInfo")
then
    System.out.println("Found DrugStock info!!!");
end

rule "Found Test String"
when
    $caseData: CaseFileInstance()
    $stockInfo: DrugStock() from $caseData.getData("test")
then
    System.out.println("Found test string!!!");
end

rule "Drugs not in stock"
when
    $caseData: CaseFileInstance()
    $order: Order() from $caseData.getData("order")
    $drug: Drug() from $order.getDrug()
    DrugStock(skuNo == $drug.skuNo, inStock == false) from $caseData.getData("stockInfo")
    not String(!this.isEmpty()) from $caseData.getData("inventoryReservationNo");
then
    System.out.println("Drugs not available!");
    CaseService caseService = (CaseService) ServiceRegistry.get().service(ServiceRegistry.CASE_SERVICE);
    caseService.triggerAdHocFragment($caseData.getCaseId(), "_620B0E74-D6EF-4746-9BCD-E9BF73AFC37D", "Order new Drugs", null);
end


rule "Drugs not fresh"
when
    $caseData: CaseFileInstance()
    $order: Order() from $caseData.getData("order")
    $drug: Drug() from $order.getDrug()
    DrugStock(skuNo == $drug.skuNo, expired == true) from $caseData.getData("stockInfo")
    not String(!this.isEmpty()) from $caseData.getData("inventoryReservationNo");
then
    System.out.println("Drugs not fresh!");
    CaseService caseService = (CaseService) ServiceRegistry.get().service(ServiceRegistry.CASE_SERVICE);
    caseService.triggerAdHocFragment($caseData.getCaseId(), "_620B0E74-D6EF-4746-9BCD-E9BF73AFC37D", "Order new Drugs", null);
end

rule "Drugs available"
when
    $caseData: CaseFileInstance()
    $order: Order() from $caseData.getData("order")
    $drug: Drug() from $order.getDrug()
    DrugStock(skuNo == $drug.skuNo, inStock == true, expired == false) from $caseData.getData("stockInfo")
    not String(!this.isEmpty()) from $caseData.getData("inventoryReservationNo");
then
    System.out.println("Drugs available!");
    CaseService caseService = (CaseService) ServiceRegistry.get().service(ServiceRegistry.CASE_SERVICE);
    caseService.triggerAdHocFragment($caseData.getCaseId(), "_620B0E74-D6EF-4746-9BCD-E9BF73AFC37D", "Reserve Order", null);
end

